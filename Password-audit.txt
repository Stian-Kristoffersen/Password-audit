# Password Audit (Active Directory)

# Dump hashes from Active Directory (AD)

Tool: Impacket-Secretsdump

# Dump hashes 1 (Using SMBExec)
$ sudo impacket-secretsdump -use-vss -exec-method smbexec -just-dc-ntlm -user-status contoso/Administrator:vagrant@192.168.38.102 -outputfile contoso-hashes

# Dump hashes 2 (Using WMIExec)
$ sudo impacket-secretsdump -use-vss -exec-method wmiexec -just-dc-ntlm -user-status contoso/Administrator:vagrant@192.168.38.102 -outputfile contoso-hashes

# Dump hashes 3 (Default)
sudo impacket-secretsdump -just-dc-ntlm -user-status contoso/Administrator:vagrant@192.168.38.102 -outputfile contoso-hashes
*Warning - potential reboot of domain controller if userbase is large

# Look for LM hashes (Crack those first)
$ grep -cv aad3b435b5

if that command returns anything greater than zero, you have LANMan hashes in your pwdump file, and you have a problem that you need to fix. 


# Cleaning of hashfile

1. Remove Machine Accounts
$ grep -e "^.*[\$]:" contoso-hashes.ntds (this list machine accounts)
$ grep -e "^.*[\$]:" -v contoso-hashes.ntds > hashes-no-machine-accounts.ntds


2. Remove Disabled Accounts
$ grep -e "Enabled" -v hashes-no-machine-accounts.ntds (this list disabled accounts)
$ grep -e "Enabled" hashes-no-machine-accounts.ntds > hashes-no-disabled-accounts.ntds 


Tool: Hashcat 

$ sudo hashcat -a 0 -m 1000 {NTLM hashfile} {wordlist} -r {rule} -w3 -O
Examples:

$ sudo hashcat -a 0 -m 1000 hashes-no-disabled-accounts.ntds ~/Documents/wordlists/rockyou.txt -r ~/Documents/rules/OneRuleToRuleThemAll.rule -w3 -O

# Write cracked hashes to a file
$ sudo hashcat -a 0 -m 1000 hashes.ntds ~/Documents/wordlists/rockyou.txt -r ~/Documents/rules/OneRuleToRuleThemAll.rule -w4 -O --username --show > cracked.txt


# Analyze the results

# Show any passwords occurring more than once:
cat cracked.txt | grep : | cut -d: -f2,3 | grep -e '[^\s]' | sort | uniq -c | sort -rn | grep -v -e '^\s*1 '

# Lowercase everything, and show identical passwords:
cat cracked.txt | grep : | cut -d: -f2,3 | grep -e '[^\s]' | tr '[:upper:]' '[:lower:]' | sort | uniq -c | sort -rn | grep -v -e '^\s*1 '

# Lowercase everything, remove numbers, and show identical passwords
cat cracked.txt | grep : | cut -d: -f2,3 | grep -e '[^\s]' | tr -d '[:digit:]' | tr '[:upper:]' '[:lower:]' | sort | uniq -c | sort -rn | grep -v -e '^\s*1 '

# Sort everything in a file named sorted.txt so that you can scan through them all manually and identify patterns:
cat cracked.txt | grep : | cut -d: -f1,2,3 | sort > sorted.txt
Includes username, hash and pasword (f1,f2,f3)

# Create a TOP 10 passwords
awk -F ":" '{print $3}' sorted.txt | sort | uniq -c | sort -fn | tail -10 | sort -r
Prints only password ($3), but can also include hash ($2)

awk -F ":" '{print $3}' sorted.txt | sort | uniq -c | sort -fn | tail -10


